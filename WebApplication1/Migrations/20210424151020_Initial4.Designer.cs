// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.App_Code;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(DbContextForApi))]
    [Migration("20210424151020_Initial4")]
    partial class Initial4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.App_Code.CityInfo", b =>
                {
                    b.Property<string>("idCityKey")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("idCityName");

                    b.HasKey("idCityKey");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("WebApplication1.App_Code.Favorite", b =>
                {
                    b.Property<Guid>("idFav")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("cityInfoId");

                    b.HasKey("idFav");

                    b.HasIndex("cityInfoId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("WebApplication1.App_Code.WeatherInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cityInfoId");

                    b.Property<DateTime>("dateCreated");

                    b.Property<string>("description");

                    b.Property<double?>("metricValue");

                    b.HasKey("Id");

                    b.HasIndex("cityInfoId");

                    b.ToTable("WeathersDetails");
                });

            modelBuilder.Entity("WebApplication1.App_Code.Favorite", b =>
                {
                    b.HasOne("WebApplication1.App_Code.CityInfo", "cityInfo")
                        .WithMany()
                        .HasForeignKey("cityInfoId");
                });

            modelBuilder.Entity("WebApplication1.App_Code.WeatherInfo", b =>
                {
                    b.HasOne("WebApplication1.App_Code.CityInfo", "cityInfo")
                        .WithMany()
                        .HasForeignKey("cityInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
